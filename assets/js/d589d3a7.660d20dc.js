"use strict";(self.webpackChunkelegantota_docs=self.webpackChunkelegantota_docs||[]).push([[162],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var d=r.createContext({}),s=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(d.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,d=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=s(t),g=i,f=u["".concat(d,".").concat(g)]||u[g]||c[g]||a;return t?r.createElement(f,l(l({ref:n},p),{},{components:t})):r.createElement(f,l({ref:n},p))}));function g(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,l=new Array(a);l[0]=u;var o={};for(var d in n)hasOwnProperty.call(n,d)&&(o[d]=n[d]);o.originalType=e,o.mdxType="string"==typeof e?e:i,l[1]=o;for(var s=2;s<a;s++)l[s]=t[s];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},9390:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>s});var r=t(7462),i=(t(7294),t(3905));const a={title:"Getting Started",sidebar_label:"Getting Started",sidebar_position:3},l=void 0,o={unversionedId:"getting-started",id:"getting-started",title:"Getting Started",description:"Getting started with ElegantOTA is pretty simple. This guide assumes that you already have a simple webserver code prepared and you just need to inject the following lines in your existing code:",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/getting-started",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Getting Started",sidebar_label:"Getting Started",sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Installation",permalink:"/installation"},next:{title:"Examples",permalink:"/examples"}},d={},s=[{value:"Include Dependency",id:"include-dependency",level:3},{value:"Add <code>begin</code> function",id:"add-begin-function",level:3},{value:"Add <code>loop</code> function",id:"add-loop-function",level:3},{value:"Final Code",id:"final-code",level:3}],p={toc:s};function c(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Getting started with ElegantOTA is pretty simple. This guide assumes that you already have a simple webserver code prepared and you just need to inject the following lines in your existing code:"),(0,i.kt)("h3",{id:"include-dependency"},"Include Dependency"),(0,i.kt)("p",null,"At the very beginning of sketch include the ElegantOTA library."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"#include <ElegantOTA.h>\n")),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"add-begin-function"},"Add ",(0,i.kt)("inlineCode",{parentName:"h3"},"begin")," function"),(0,i.kt)("p",null,"Now add the ",(0,i.kt)("inlineCode",{parentName:"p"},"begin")," function of ElegantOTA in setup block of your sketch. This will inject ElegantOTA routes and logic into the web server."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"ElegantOTA.begin(&server);\n")),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"add-loop-function"},"Add ",(0,i.kt)("inlineCode",{parentName:"h3"},"loop")," function"),(0,i.kt)("p",null,"Last part is to call the ",(0,i.kt)("inlineCode",{parentName:"p"},"loop")," function of ElegantOTA in loop block of your sketch. This loop block is necessary for ElegantOTA to handle reboot after OTA update."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},"ElegantOTA.loop();\n")),(0,i.kt)("br",null),(0,i.kt)("h3",{id:"final-code"},"Final Code"),(0,i.kt)("p",null,"That's it! This is how a ready to use example will look like. After uploading the code to your platform, you can access ElegantOTA portal on ",(0,i.kt)("inlineCode",{parentName:"p"},"http://<YOUR_DEVICE_IP>/update"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-cpp"},'/*\n  -----------------------\n  ElegantOTA - Demo Example\n  -----------------------\n\n  Skill Level: Beginner\n\n  This example provides with a bare minimal app with ElegantOTA functionality.\n\n  Github: https://github.com/ayushsharma82/ElegantOTA\n  WiKi: https://docs.elegantota.pro\n\n  Works with both ESP8266 & ESP32\n\n  -------------------------------\n\n  Upgrade to ElegantOTA Pro: https://elegantota.pro\n\n*/\n\n\n#if defined(ESP8266)\n  #include <ESP8266WiFi.h>\n  #include <WiFiClient.h>\n  #include <ESP8266WebServer.h>\n#elif defined(ESP32)\n  #include <WiFi.h>\n  #include <WiFiClient.h>\n  #include <WebServer.h>\n#endif\n\n#include <ElegantOTA.h>\n\nconst char* ssid = "........";\nconst char* password = "........";\n\n#if defined(ESP8266)\n  ESP8266WebServer server(80);\n#elif defined(ESP32)\n  WebServer server(80);\n#endif\n\nvoid setup(void) {\n  Serial.begin(115200);\n  WiFi.mode(WIFI_STA);\n  WiFi.begin(ssid, password);\n  Serial.println("");\n\n  // Wait for connection\n  while (WiFi.status() != WL_CONNECTED) {\n    delay(500);\n    Serial.print(".");\n  }\n  Serial.println("");\n  Serial.print("Connected to ");\n  Serial.println(ssid);\n  Serial.print("IP address: ");\n  Serial.println(WiFi.localIP());\n\n  server.on("/", []() {\n    server.send(200, "text/plain", "Hi! This is ElegantOTA Demo.");\n  });\n\n  ElegantOTA.begin(&server);    // Start ElegantOTA\n  server.begin();\n  Serial.println("HTTP server started");\n}\n\nvoid loop(void) {\n  server.handleClient();\n  ElegantOTA.loop();\n}\n')))}c.isMDXComponent=!0}}]);